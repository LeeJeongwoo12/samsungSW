#include <iostream>
#include <cmath>
#include <vector>
#include <algorithm>

using namespace std;

int main(int argc, char** argv)
{
	int test_case;
	int T;
	cin >> T;
	for (test_case = 1; test_case <= T; ++test_case)
	{
		int n, k;
		cin >> n >> k;

		int max = -1;

		vector<int> d;
		vector<int> perm;
		vector<int> temp;

		for (int i = 0; i < n; i++) {
			int input;
			cin >> input;
			d.push_back(input);
		}

		for (int i = n; i >= 1; i--) {
			perm.clear();
			temp.clear();

			if (max != -1)
				break;

			for (int j = 0; j < i; j++)
				perm.push_back(1);
			for (int j = 0; j < n - i; j++)
				perm.push_back(0);

			sort(perm.begin(), perm.end());

			do {
				temp.clear();
				for (int j = 0; j < n; j++) {
					if (perm[j] == 1) {
						temp.push_back(d[j]);
					}
				}
				sort(temp.begin(), temp.end());
				if (abs(temp[0] - temp.back()) <= k) {
					if (max < i)
						max = i;
				}
					
			} while (next_permutation(perm.begin(), perm.end()));
		}

		printf("#%d %d\n", test_case, max);
	}
	return 0;
}